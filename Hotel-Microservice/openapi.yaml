openapi: 3.0.0
info:
  title: Hotel-Management API
  description: API for hotel management with hotel, room, service, booking, guest, staff
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development environment

paths:
  /hotels:
    get:
      summary: Retrieve all hotels
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by hotel name
        - in: query
          name: location
          schema:
            type: string
          description: Filter by hotel location
        - in: query
          name: rating
          schema:
            type: number
          description: Filter by hotel rating
      responses:
        "200":
          description: List of all hotels

    post:
      summary: Create new hotel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                adresse:
                  type: string
      responses:
        "201":
          description: Hotel successfully created

  /hotels/{id}:
    get:
      summary: Retrieve hotel via ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Hotel found
        "404":
          description: Hotel not found

    put:
      summary: Update hotel
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                location:
                  type: string
      responses:
        "200":
          description: Hotel updated successfully

    delete:
      summary: Delete hotel
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Hotel deleted

  /rooms:
    get:
      summary: Retrieve all rooms
      parameters:
        - in: query
          name: hotel_id
          schema:
            type: string
          description: Filter by hotel ID
        - in: query
          name: type
          schema:
            type: string
          description: Filter by room type
        - in: query
          name: price
          schema:
            type: number
          description: Filter by room price
      responses:
        "200":
          description: List of all rooms

    post:
      summary: Create new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel_id:
                  type: string
                  description: ID of the hotel this room belongs to
                  example: "hotel123"
                number:
                  type: number
                type:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        "201":
          description: Room successfully created

  /rooms/{id}:
    get:
      summary: Retrieve room via ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Room found
        "404":
          description: Room not found

    put:
      summary: Update room
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel_id:
                  type: string
                  description: ID of the hotel this room belongs to
                  example: "hotel123"
                number:
                  type: number
                type:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        "200":
          description: Room updated successfully

    delete:
      summary: Delete room
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Room deleted

  /services:
    get:
      summary: Retrieve all services
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by service name
        - in: query
          name: price
          schema:
            type: number
          description: Filter by service price
      responses:
        "200":
          description: List of all services

    post:
      summary: Create new service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        "201":
          description: Service successfully created

  /services/{id}:
    get:
      summary: Retrieve service via ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Service found
        "404":
          description: Service not found

    put:
      summary: Update service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        "200":
          description: Service updated successfully

    delete:
      summary: Delete service
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Service deleted

  /bookings:
    get:
      summary: Retrieve all bookings
      parameters:
        - in: query
          name: guest_id
          schema:
            type: string
          description: Filter by guest ID
        - in: query
          name: room_id
          schema:
            type: string
          description: Filter by room ID
        - in: query
          name: checkInDate
          schema:
            type: string
            format: date
          description: Filter by check-in date
      responses:
        "200":
          description: List of all bookings

    post:
      summary: Create new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                guest_id:
                  type: string
                  description: ID of the guest making the booking
                  example: "guest123"
                room_id:
                  type: string
                  description: ID of the room being booked
                  example: "room456"
                date:
                  type: string
                  format: date
      responses:
        "201":
          description: Booking successfully created

  /bookings/{id}:
    get:
      summary: Retrieve booking via ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Booking found
        "404":
          description: Booking not found

    put:
      summary: Update booking
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                guest_id:
                  type: string
                  description: ID of the guest making the booking
                  example: "guest123"
                room_id:
                  type: string
                  description: ID of the room being booked
                  example: "room456"
                date:
                  type: string
                  format: date
      responses:
        "200":
          description: Booking updated successfully

    delete:
      summary: Delete booking
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Booking deleted

  /guests:
    get:
      summary: Retrieve all guests
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by name (first or last)
        - in: query
          name: email
          schema:
            type: string
          description: Filter by email address
      responses:
        "200":
          description: List of all guests

    post:
      summary: Create new guest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                phone_number:
                  type: string
      responses:
        "201":
          description: Guest successfully created

  /guests/{id}:
    get:
      summary: Retrieve guest via ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Guest found
        "404":
          description: Guest not found

    put:
      summary: Update guest
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                phone_number:
                  type: string
      responses:
        "200":
          description: Guest updated successfully

    delete:
      summary: Delete guest
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Guest deleted

  /staff:
    get:
      summary: Retrieve all staff members
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by name (first or last)
        - in: query
          name: position
          schema:
            type: string
          description: Filter by staff position
      responses:
        "200":
          description: List of all staff members

    post:
      summary: Create new staff member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                position:
                  type: string
      responses:
        "201":
          description: Staff member successfully created

  /staff/{id}:
    get:
      summary: Retrieve staff member via ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Staff member found
        "404":
          description: Staff member not found

    put:
      summary: Update staff member
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                position:
                  type: string
      responses:
        "200":
          description: Staff member updated successfully

    delete:
      summary: Delete staff member
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Staff member deleted

  /booking-services:
    get:
      summary: Retrieve all booking-service associations
      parameters:
        - in: query
          name: booking_id
          schema:
            type: string
          description: Filter by booking ID
        - in: query
          name: serviceId
          schema:
            type: string
          description: Filter by service ID
      responses:
        "200":
          description: List of all booking-service associations

    post:
      summary: Associate a service with a booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                booking_id:
                  type: string
                  description: ID of the booking
                  example: "booking123"
                service_id:
                  type: string
                  description: ID of the service
                  example: "service123"
      responses:
        "201":
          description: Service successfully associated with booking

  /booking-services/{id}:
    get:
      summary: Retrieve a specific booking-service association by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Booking-service association found
        "404":
          description: Booking-service association not found

    delete:
      summary: Delete a booking-service association
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Booking-service association deleted
